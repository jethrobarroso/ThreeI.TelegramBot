// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThreeI.TelegramBot.Data;

namespace ThreeI.TelegramBot.Data.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20200714063110_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("ThreeI.TelegramBot.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<int>("SupervisorId")
                        .HasColumnName("supervisor_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId")
                        .IsUnique();

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electrical related issues",
                            Name = "Electricity",
                            SupervisorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Water related issues",
                            Name = "Plumbing",
                            SupervisorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Painting related issues",
                            Name = "Paint",
                            SupervisorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Walls & Ceilings related issues",
                            Name = "Walls & Ceilings",
                            SupervisorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Carpentry",
                            Name = "Carpentry",
                            SupervisorId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Other",
                            Name = "Other",
                            SupervisorId = 6
                        });
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.DialogState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dialog_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Block")
                        .HasColumnName("block")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChatPhase")
                        .HasColumnName("chat_phase")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Confirmation")
                        .HasColumnName("confirmation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSupportMode")
                        .HasColumnName("is_support_mode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnName("last_active")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnName("unit")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("category_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("category_id");

                    b.ToTable("dialog_states");
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.FaultReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("report_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Block")
                        .IsRequired()
                        .HasColumnName("block")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateLogged")
                        .HasColumnName("date_logged")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<int?>("DialogStateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnName("unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DialogStateId");

                    b.ToTable("reports");
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("supervisor_id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnName("chat_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnName("full_name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("TelegramUserId")
                        .HasColumnName("telegram_user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("supervisors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 0L,
                            TelegramUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ChatId = 0L,
                            TelegramUserId = 0
                        },
                        new
                        {
                            Id = 3,
                            ChatId = 0L,
                            TelegramUserId = 0
                        },
                        new
                        {
                            Id = 4,
                            ChatId = 0L,
                            TelegramUserId = 0
                        },
                        new
                        {
                            Id = 5,
                            ChatId = 0L,
                            TelegramUserId = 0
                        },
                        new
                        {
                            Id = 6,
                            ChatId = 0L,
                            TelegramUserId = 0
                        });
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.Category", b =>
                {
                    b.HasOne("ThreeI.TelegramBot.Core.Supervisor", "Supervisor")
                        .WithOne("Category")
                        .HasForeignKey("ThreeI.TelegramBot.Core.Category", "SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.DialogState", b =>
                {
                    b.HasOne("ThreeI.TelegramBot.Core.Category", "Category")
                        .WithMany("Dialog")
                        .HasForeignKey("category_id");
                });

            modelBuilder.Entity("ThreeI.TelegramBot.Core.FaultReport", b =>
                {
                    b.HasOne("ThreeI.TelegramBot.Core.Category", "Category")
                        .WithMany("Report")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ThreeI.TelegramBot.Core.DialogState", "DialogState")
                        .WithMany("FaultReports")
                        .HasForeignKey("DialogStateId");
                });
#pragma warning restore 612, 618
        }
    }
}
